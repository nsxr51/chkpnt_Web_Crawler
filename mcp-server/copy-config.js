#!/usr/bin/env node

import fs from 'fs-extra';\nimport path from 'path';\nimport os from 'os';\nimport { fileURLToPath } from 'url';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\nasync function copyConfig() {\n    console.log('üìã Copying Claude Desktop Configuration...');\n    \n    const sourceConfig = path.join(__dirname, 'claude_desktop_config.json');\n    \n    // Check if source config exists\n    if (!await fs.pathExists(sourceConfig)) {\n        console.error('‚ùå Configuration file not found!');\n        console.log('üí° Run \"npm run setup\" first to create the config file.');\n        process.exit(1);\n    }\n    \n    // Get destination path\n    const getDestinationPath = () => {\n        switch (os.platform()) {\n            case 'win32':\n                return path.join(os.homedir(), 'AppData', 'Roaming', 'Claude', 'claude_desktop_config.json');\n            case 'darwin':\n                return path.join(os.homedir(), 'Library', 'Application Support', 'Claude', 'claude_desktop_config.json');\n            default:\n                return path.join(os.homedir(), '.config', 'Claude', 'claude_desktop_config.json');\n        }\n    };\n    \n    const destinationPath = getDestinationPath();\n    const destinationDir = path.dirname(destinationPath);\n    \n    try {\n        // Ensure destination directory exists\n        await fs.ensureDir(destinationDir);\n        \n        // Copy the configuration file\n        await fs.copy(sourceConfig, destinationPath);\n        \n        console.log('‚úÖ Configuration copied successfully!');\n        console.log(`üìÅ From: ${sourceConfig}`);\n        console.log(`üìÅ To: ${destinationPath}`);\n        console.log('');\n        console.log('üîÑ Next steps:');\n        console.log('   1. Restart Claude Desktop');\n        console.log('   2. Try: \"Crawl https://example.com and analyze words\"');\n        console.log('');\n        console.log('üéâ You\\'re ready to use the web crawler with Claude!');\n        \n    } catch (error) {\n        console.error(`‚ùå Copy failed: ${error.message}`);\n        console.log('');\n        console.log('üõ†Ô∏è  Manual copy instructions:');\n        console.log(`üìã Copy this file: ${sourceConfig}`);\n        console.log(`üìÅ To this location: ${destinationPath}`);\n        console.log('');\n        \n        // Show platform-specific instructions\n        switch (os.platform()) {\n            case 'win32':\n                console.log('Windows instructions:');\n                console.log('1. Press Win+R and type: %APPDATA%\\\\Claude');\n                console.log('2. Create the Claude folder if it doesn\\'t exist');\n                console.log('3. Copy claude_desktop_config.json to that folder');\n                break;\n            case 'darwin':\n                console.log('macOS instructions:');\n                console.log('1. Open Finder and press Cmd+Shift+G');\n                console.log('2. Go to: ~/Library/Application Support/Claude');\n                console.log('3. Create the Claude folder if it doesn\\'t exist');\n                console.log('4. Copy claude_desktop_config.json to that folder');\n                break;\n            default:\n                console.log('Linux instructions:');\n                console.log('1. Open file manager or terminal');\n                console.log('2. Go to: ~/.config/Claude');\n                console.log('3. Create the Claude folder if it doesn\\'t exist');\n                console.log('4. Copy claude_desktop_config.json to that folder');\n                break;\n        }\n        \n        process.exit(1);\n    }\n}\n\nif (import.meta.url === `file://${process.argv[1]}`) {\n    copyConfig().catch(console.error);\n}\n\nexport default copyConfig;